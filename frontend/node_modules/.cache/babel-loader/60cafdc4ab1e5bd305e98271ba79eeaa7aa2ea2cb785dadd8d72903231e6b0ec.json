{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\AI-SMART STUDY ASSISTANT\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Container, TextField, Button, Typography, Box } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Register = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Replace the API URL with your backend endpoint\n//       await axios.post(process.env.REACT_APP_API_URL + \"/auth/register\", { username, password });\n//       alert(\"Registration successful!\");\n//       navigate(\"/login\");\n//     } catch (error) {\n//       alert(\"Registration failed!\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Typography variant=\"h4\" gutterBottom>Register</Typography>\n//       <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n//         <TextField\n//           fullWidth\n//           label=\"Username\"\n//           margin=\"normal\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <TextField\n//           fullWidth\n//           label=\"Password\"\n//           type=\"password\"\n//           margin=\"normal\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 2 }}>\n//           Register\n//         </Button>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Typography, Box, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Handle input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n\n    // Basic client-side validation\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    try {\n      // Send registration data to your backend\n      const response = await axios.post(process.env.REACT_APP_API_URL + '/auth/register', {\n        name,\n        email,\n        password\n      });\n      // If registration is successful, show a personalized success message\n      setSuccessMessage(`Dear ${name}, you have logged in successfully.`);\n      // Optionally, redirect to the dashboard after a delay\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 2000);\n    } catch (err) {\n      console.error(err);\n      setError('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      gutterBottom: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), successMessage ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"primary\",\n      gutterBottom: true,\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Confirm Password\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: formData.confirmPassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          mt: 3\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"eLouP41zSK35LJVwVLte75h+V88=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Box","Grid","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","name","email","password","confirmPassword","error","setError","successMessage","setSuccessMessage","handleChange","e","target","value","handleSubmit","preventDefault","response","post","process","env","REACT_APP_API_URL","setTimeout","err","console","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","component","onSubmit","noValidate","container","spacing","item","xs","required","fullWidth","label","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/AI-SMART STUDY ASSISTANT/frontend/src/components/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Container, TextField, Button, Typography, Box } from \"@mui/material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Register = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Replace the API URL with your backend endpoint\r\n//       await axios.post(process.env.REACT_APP_API_URL + \"/auth/register\", { username, password });\r\n//       alert(\"Registration successful!\");\r\n//       navigate(\"/login\");\r\n//     } catch (error) {\r\n//       alert(\"Registration failed!\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//       <Typography variant=\"h4\" gutterBottom>Register</Typography>\r\n//       <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n//         <TextField\r\n//           fullWidth\r\n//           label=\"Username\"\r\n//           margin=\"normal\"\r\n//           value={username}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//         />\r\n//         <TextField\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           margin=\"normal\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//         />\r\n//         <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 2 }}>\r\n//           Register\r\n//         </Button>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, confirmPassword } = formData;\r\n\r\n    // Basic client-side validation\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send registration data to your backend\r\n      const response = await axios.post(\r\n        process.env.REACT_APP_API_URL + '/auth/register',\r\n        { name, email, password }\r\n      );\r\n      // If registration is successful, show a personalized success message\r\n      setSuccessMessage(`Dear ${name}, you have logged in successfully.`);\r\n      // Optionally, redirect to the dashboard after a delay\r\n      setTimeout(() => {\r\n        navigate('/dashboard');\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Register\r\n      </Typography>\r\n      {error && (\r\n        <Typography variant=\"body1\" color=\"error\" gutterBottom>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n      {successMessage ? (\r\n        <Typography variant=\"body1\" color=\"primary\" gutterBottom>\r\n          {successMessage}\r\n        </Typography>\r\n      ) : (\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {/* Name Field */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            {/* Email Field */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            {/* Password Field */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            {/* Confirm Password Field */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 3 }}>\r\n            Register\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}