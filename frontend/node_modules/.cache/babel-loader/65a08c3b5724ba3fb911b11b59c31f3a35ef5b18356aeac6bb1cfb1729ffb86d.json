{"ast":null,"code":"// import React, { useContext, useState } from \"react\";\n// import {\n//   Container,\n//   Typography,\n//   Grid,\n//   Card,\n//   CardContent,\n//   Button,\n//   Box,\n//   LinearProgress,\n//   Modal,\n//   TextField\n// } from \"@mui/material\";\n// import { AuthContext } from \"../AuthContext\";\n// import { generateStudyPlan } from \"../services/api\";\n\n// // Modal style\n// const modalStyle = {\n//   position: \"absolute\",\n//   top: \"50%\",\n//   left: \"50%\",\n//   transform: \"translate(-50%, -50%)\",\n//   width: 400,\n//   bgcolor: \"background.paper\",\n//   border: \"2px solid #000\",\n//   boxShadow: 24,\n//   p: 4,\n// };\n\n// const Dashboard = () => {\n//   const { user } = useContext(AuthContext);\n//   const [progress, setProgress] = useState(50);\n//   const [studyPlan, setStudyPlan] = useState(null);\n//   const [preferences, setPreferences] = useState({ preferredTime: \"\", subjects: \"\" });\n//   const [target, setTarget] = useState(\"\");\n//   const [uploadedFile, setUploadedFile] = useState(null);\n//   const [question, setQuestion] = useState(\"\");\n//   const [aiResult, setAiResult] = useState(\"\");\n\n//   const [planModalOpen, setPlanModalOpen] = useState(false);\n//   const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\n//   const [targetsModalOpen, setTargetsModalOpen] = useState(false);\n//   const [uploadModalOpen, setUploadModalOpen] = useState(false);\n//   const [qaModalOpen, setQaModalOpen] = useState(false);\n//   const [loadingPlan, setLoadingPlan] = useState(false);\n\n//   const handleGenerateStudyPlan = async () => {\n//     setLoadingPlan(true);\n//     try {\n//       const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(preferences)} and current progress of ${progress}%. Provide a daily schedule and study tips.`;\n//       const aiPlan = await generateStudyPlan(prompt, \"study plan\");\n//       setStudyPlan(aiPlan);\n//       alert(\"AI study plan generated.\");\n//       setPlanModalOpen(false);\n//     } catch (error) {\n//       console.error(\"Error generating study plan:\", error);\n//       alert(\"Error generating study plan.\");\n//     } finally {\n//       setLoadingPlan(false);\n//     }\n//   };\n\n//   const handleSavePreferences = () => {\n//     alert(\"Preferences saved!\");\n//     setPreferencesModalOpen(false);\n//   };\n\n//   const handleSaveTarget = () => {\n//     alert(`Semester target \"${target}\" saved!`);\n//     setTargetsModalOpen(false);\n//   };\n\n//   const handleFileUpload = (e) => {\n//     setUploadedFile(e.target.files[0]);\n//   };\n\n//   const handleProcessFile = async () => {\n//     const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\n//     const result = await generateStudyPlan(prompt, \"file processing\");\n//     setAiResult(result);\n//     alert(`AI generated notes: ${result}`);\n//     setUploadModalOpen(false);\n//   };\n\n//   const handleAskQuestion = async () => {\n//     const prompt = `Answer this question: ${question}`;\n//     const answer = await generateStudyPlan(prompt, \"question answer\");\n//     setAiResult(answer);\n//     alert(`AI Answer: ${answer}`);\n//     setQaModalOpen(false);\n//   };\n\n//   return (\n//     <Container sx={{ mt: 4 }}>\n//       {user ? (\n//         <>\n//           <Typography variant=\"h4\" gutterBottom>Dashboard</Typography>\n//           <Typography variant=\"h6\" gutterBottom>Welcome, {user.username}!</Typography>\n//           <Grid container spacing={3}>\n//             {/* Study Progress */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Progress</Typography>\n//                   <Box sx={{ mt: 2 }}>\n//                     <Typography variant=\"body2\">Progress: {progress}%</Typography>\n//                     <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 10, borderRadius: 5 }} />\n//                   </Box>\n//                   <Box sx={{ mt: 2 }}>\n//                     <Button variant=\"outlined\" onClick={() => setProgress((prev) => Math.min(prev + 10, 100))}>\n//                       Increase Progress\n//                     </Button>\n//                   </Box>\n//                 </CardContent>\n//               </Card>\n//             </Grid>\n//             {/* Study Plan */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Plan</Typography>\n//                   {loadingPlan ? (\n//                     <Typography variant=\"body2\">Generating plan...</Typography>\n//                   ) : studyPlan ? (\n//                     <Typography variant=\"body2\">{studyPlan}</Typography>\n//                   ) : (\n//                     <Typography variant=\"body2\">No plan generated yet.</Typography>\n//                   )}\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPlanModalOpen(true)}>\n//                     Create / Get Study Plan\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* Preferences */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Preferences</Typography>\n//                   <Typography variant=\"body2\">Customize your experience.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPreferencesModalOpen(true)}>\n//                     Update Preferences\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* Semester Targets */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Semester Targets</Typography>\n//                   <Typography variant=\"body2\">Set and monitor goals.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setTargetsModalOpen(true)}>\n//                     Set Targets\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* File Upload */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Upload File</Typography>\n//                   <Typography variant=\"body2\">Upload files to generate notes and exam questions.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setUploadModalOpen(true)}>\n//                     Upload File\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* AI Q&A */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Ask a Question</Typography>\n//                   <Typography variant=\"body2\">Get personalized AI answers.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setQaModalOpen(true)}>\n//                     Ask Question\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//           </Grid>\n\n//           {/* Modals */}\n//           <Modal open={planModalOpen} onClose={() => setPlanModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Study Plan Options</Typography>\n//               <Button variant=\"contained\" fullWidth sx={{ mb: 2 }} onClick={handleGenerateStudyPlan}>\n//                 Get AI Recommended Study Plan\n//               </Button>\n//               <Button variant=\"outlined\" fullWidth onClick={() => alert(\"Navigate to custom study plan page.\")}>\n//                 Create My Own Study Plan\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={preferencesModalOpen} onClose={() => setPreferencesModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Update Preferences</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Preferred Study Time\"\n//                 value={preferences.preferredTime}\n//                 onChange={(e) => setPreferences({ ...preferences, preferredTime: e.target.value })}\n//                 sx={{ mb: 2 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 label=\"Favorite Subjects\"\n//                 value={preferences.subjects}\n//                 onChange={(e) => setPreferences({ ...preferences, subjects: e.target.value })}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleSavePreferences}>\n//                 Save Preferences\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={targetsModalOpen} onClose={() => setTargetsModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Semester Targets</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Enter your target\"\n//                 value={target}\n//                 onChange={(e) => setTarget(e.target.value)}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleSaveTarget}>\n//                 Save Target\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={uploadModalOpen} onClose={() => setUploadModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Upload File for AI Processing</Typography>\n//               <input type=\"file\" onChange={handleFileUpload} style={{ marginBottom: \"16px\" }} />\n//               <Button variant=\"contained\" fullWidth onClick={handleProcessFile}>\n//                 Process File\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={qaModalOpen} onClose={() => setQaModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Ask a Question</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Your question\"\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleAskQuestion}>\n//                 Get Answer\n//               </Button>\n//             </Box>\n//           </Modal>\n//         </>\n//       ) : (\n//         <Typography variant=\"h6\">Please log in to view your dashboard.</Typography>\n//       )}\n//     </Container>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Admin/OneDrive/Desktop/AI-SMART STUDY ASSISTANT/frontend/src/components/Dashboard.js"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\r\n// import {\r\n//   Container,\r\n//   Typography,\r\n//   Grid,\r\n//   Card,\r\n//   CardContent,\r\n//   Button,\r\n//   Box,\r\n//   LinearProgress,\r\n//   Modal,\r\n//   TextField\r\n// } from \"@mui/material\";\r\n// import { AuthContext } from \"../AuthContext\";\r\n// import { generateStudyPlan } from \"../services/api\";\r\n\r\n// // Modal style\r\n// const modalStyle = {\r\n//   position: \"absolute\",\r\n//   top: \"50%\",\r\n//   left: \"50%\",\r\n//   transform: \"translate(-50%, -50%)\",\r\n//   width: 400,\r\n//   bgcolor: \"background.paper\",\r\n//   border: \"2px solid #000\",\r\n//   boxShadow: 24,\r\n//   p: 4,\r\n// };\r\n\r\n// const Dashboard = () => {\r\n//   const { user } = useContext(AuthContext);\r\n//   const [progress, setProgress] = useState(50);\r\n//   const [studyPlan, setStudyPlan] = useState(null);\r\n//   const [preferences, setPreferences] = useState({ preferredTime: \"\", subjects: \"\" });\r\n//   const [target, setTarget] = useState(\"\");\r\n//   const [uploadedFile, setUploadedFile] = useState(null);\r\n//   const [question, setQuestion] = useState(\"\");\r\n//   const [aiResult, setAiResult] = useState(\"\");\r\n\r\n//   const [planModalOpen, setPlanModalOpen] = useState(false);\r\n//   const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\r\n//   const [targetsModalOpen, setTargetsModalOpen] = useState(false);\r\n//   const [uploadModalOpen, setUploadModalOpen] = useState(false);\r\n//   const [qaModalOpen, setQaModalOpen] = useState(false);\r\n//   const [loadingPlan, setLoadingPlan] = useState(false);\r\n\r\n//   const handleGenerateStudyPlan = async () => {\r\n//     setLoadingPlan(true);\r\n//     try {\r\n//       const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(preferences)} and current progress of ${progress}%. Provide a daily schedule and study tips.`;\r\n//       const aiPlan = await generateStudyPlan(prompt, \"study plan\");\r\n//       setStudyPlan(aiPlan);\r\n//       alert(\"AI study plan generated.\");\r\n//       setPlanModalOpen(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error generating study plan:\", error);\r\n//       alert(\"Error generating study plan.\");\r\n//     } finally {\r\n//       setLoadingPlan(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSavePreferences = () => {\r\n//     alert(\"Preferences saved!\");\r\n//     setPreferencesModalOpen(false);\r\n//   };\r\n\r\n//   const handleSaveTarget = () => {\r\n//     alert(`Semester target \"${target}\" saved!`);\r\n//     setTargetsModalOpen(false);\r\n//   };\r\n\r\n//   const handleFileUpload = (e) => {\r\n//     setUploadedFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleProcessFile = async () => {\r\n//     const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\r\n//     const result = await generateStudyPlan(prompt, \"file processing\");\r\n//     setAiResult(result);\r\n//     alert(`AI generated notes: ${result}`);\r\n//     setUploadModalOpen(false);\r\n//   };\r\n\r\n//   const handleAskQuestion = async () => {\r\n//     const prompt = `Answer this question: ${question}`;\r\n//     const answer = await generateStudyPlan(prompt, \"question answer\");\r\n//     setAiResult(answer);\r\n//     alert(`AI Answer: ${answer}`);\r\n//     setQaModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Container sx={{ mt: 4 }}>\r\n//       {user ? (\r\n//         <>\r\n//           <Typography variant=\"h4\" gutterBottom>Dashboard</Typography>\r\n//           <Typography variant=\"h6\" gutterBottom>Welcome, {user.username}!</Typography>\r\n//           <Grid container spacing={3}>\r\n//             {/* Study Progress */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Progress</Typography>\r\n//                   <Box sx={{ mt: 2 }}>\r\n//                     <Typography variant=\"body2\">Progress: {progress}%</Typography>\r\n//                     <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 10, borderRadius: 5 }} />\r\n//                   </Box>\r\n//                   <Box sx={{ mt: 2 }}>\r\n//                     <Button variant=\"outlined\" onClick={() => setProgress((prev) => Math.min(prev + 10, 100))}>\r\n//                       Increase Progress\r\n//                     </Button>\r\n//                   </Box>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Study Plan */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Plan</Typography>\r\n//                   {loadingPlan ? (\r\n//                     <Typography variant=\"body2\">Generating plan...</Typography>\r\n//                   ) : studyPlan ? (\r\n//                     <Typography variant=\"body2\">{studyPlan}</Typography>\r\n//                   ) : (\r\n//                     <Typography variant=\"body2\">No plan generated yet.</Typography>\r\n//                   )}\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPlanModalOpen(true)}>\r\n//                     Create / Get Study Plan\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Preferences */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Preferences</Typography>\r\n//                   <Typography variant=\"body2\">Customize your experience.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPreferencesModalOpen(true)}>\r\n//                     Update Preferences\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Semester Targets */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Semester Targets</Typography>\r\n//                   <Typography variant=\"body2\">Set and monitor goals.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setTargetsModalOpen(true)}>\r\n//                     Set Targets\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* File Upload */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Upload File</Typography>\r\n//                   <Typography variant=\"body2\">Upload files to generate notes and exam questions.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setUploadModalOpen(true)}>\r\n//                     Upload File\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* AI Q&A */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Ask a Question</Typography>\r\n//                   <Typography variant=\"body2\">Get personalized AI answers.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setQaModalOpen(true)}>\r\n//                     Ask Question\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//           </Grid>\r\n\r\n//           {/* Modals */}\r\n//           <Modal open={planModalOpen} onClose={() => setPlanModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Study Plan Options</Typography>\r\n//               <Button variant=\"contained\" fullWidth sx={{ mb: 2 }} onClick={handleGenerateStudyPlan}>\r\n//                 Get AI Recommended Study Plan\r\n//               </Button>\r\n//               <Button variant=\"outlined\" fullWidth onClick={() => alert(\"Navigate to custom study plan page.\")}>\r\n//                 Create My Own Study Plan\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={preferencesModalOpen} onClose={() => setPreferencesModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Update Preferences</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Preferred Study Time\"\r\n//                 value={preferences.preferredTime}\r\n//                 onChange={(e) => setPreferences({ ...preferences, preferredTime: e.target.value })}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Favorite Subjects\"\r\n//                 value={preferences.subjects}\r\n//                 onChange={(e) => setPreferences({ ...preferences, subjects: e.target.value })}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleSavePreferences}>\r\n//                 Save Preferences\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={targetsModalOpen} onClose={() => setTargetsModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Semester Targets</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Enter your target\"\r\n//                 value={target}\r\n//                 onChange={(e) => setTarget(e.target.value)}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleSaveTarget}>\r\n//                 Save Target\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={uploadModalOpen} onClose={() => setUploadModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Upload File for AI Processing</Typography>\r\n//               <input type=\"file\" onChange={handleFileUpload} style={{ marginBottom: \"16px\" }} />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleProcessFile}>\r\n//                 Process File\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={qaModalOpen} onClose={() => setQaModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Ask a Question</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Your question\"\r\n//                 value={question}\r\n//                 onChange={(e) => setQuestion(e.target.value)}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleAskQuestion}>\r\n//                 Get Answer\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n//         </>\r\n//       ) : (\r\n//         <Typography variant=\"h6\">Please log in to view your dashboard.</Typography>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}