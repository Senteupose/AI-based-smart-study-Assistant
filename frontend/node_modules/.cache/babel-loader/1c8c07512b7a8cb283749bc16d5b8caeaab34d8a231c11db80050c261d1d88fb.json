{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\AI-SMART STUDY ASSISTANT\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from \"react\";\n// import {\n//   Container,\n//   Typography,\n//   Grid,\n//   Card,\n//   CardContent,\n//   Button,\n//   Box,\n//   LinearProgress,\n//   Modal,\n//   TextField\n// } from \"@mui/material\";\n// import { AuthContext } from \"../AuthContext\";\n// import { generateStudyPlan } from \"../services/api\";\n\n// // Modal style\n// const modalStyle = {\n//   position: \"absolute\",\n//   top: \"50%\",\n//   left: \"50%\",\n//   transform: \"translate(-50%, -50%)\",\n//   width: 400,\n//   bgcolor: \"background.paper\",\n//   border: \"2px solid #000\",\n//   boxShadow: 24,\n//   p: 4,\n// };\n\n// const Dashboard = () => {\n//   const { user } = useContext(AuthContext);\n//   const [progress, setProgress] = useState(50);\n//   const [studyPlan, setStudyPlan] = useState(null);\n//   const [preferences, setPreferences] = useState({ preferredTime: \"\", subjects: \"\" });\n//   const [target, setTarget] = useState(\"\");\n//   const [uploadedFile, setUploadedFile] = useState(null);\n//   const [question, setQuestion] = useState(\"\");\n//   const [aiResult, setAiResult] = useState(\"\");\n\n//   const [planModalOpen, setPlanModalOpen] = useState(false);\n//   const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\n//   const [targetsModalOpen, setTargetsModalOpen] = useState(false);\n//   const [uploadModalOpen, setUploadModalOpen] = useState(false);\n//   const [qaModalOpen, setQaModalOpen] = useState(false);\n//   const [loadingPlan, setLoadingPlan] = useState(false);\n\n//   const handleGenerateStudyPlan = async () => {\n//     setLoadingPlan(true);\n//     try {\n//       const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(preferences)} and current progress of ${progress}%. Provide a daily schedule and study tips.`;\n//       const aiPlan = await generateStudyPlan(prompt, \"study plan\");\n//       setStudyPlan(aiPlan);\n//       alert(\"AI study plan generated.\");\n//       setPlanModalOpen(false);\n//     } catch (error) {\n//       console.error(\"Error generating study plan:\", error);\n//       alert(\"Error generating study plan.\");\n//     } finally {\n//       setLoadingPlan(false);\n//     }\n//   };\n\n//   const handleSavePreferences = () => {\n//     alert(\"Preferences saved!\");\n//     setPreferencesModalOpen(false);\n//   };\n\n//   const handleSaveTarget = () => {\n//     alert(`Semester target \"${target}\" saved!`);\n//     setTargetsModalOpen(false);\n//   };\n\n//   const handleFileUpload = (e) => {\n//     setUploadedFile(e.target.files[0]);\n//   };\n\n//   const handleProcessFile = async () => {\n//     const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\n//     const result = await generateStudyPlan(prompt, \"file processing\");\n//     setAiResult(result);\n//     alert(`AI generated notes: ${result}`);\n//     setUploadModalOpen(false);\n//   };\n\n//   const handleAskQuestion = async () => {\n//     const prompt = `Answer this question: ${question}`;\n//     const answer = await generateStudyPlan(prompt, \"question answer\");\n//     setAiResult(answer);\n//     alert(`AI Answer: ${answer}`);\n//     setQaModalOpen(false);\n//   };\n\n//   return (\n//     <Container sx={{ mt: 4 }}>\n//       {user ? (\n//         <>\n//           <Typography variant=\"h4\" gutterBottom>Dashboard</Typography>\n//           <Typography variant=\"h6\" gutterBottom>Welcome, {user.username}!</Typography>\n//           <Grid container spacing={3}>\n//             {/* Study Progress */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Progress</Typography>\n//                   <Box sx={{ mt: 2 }}>\n//                     <Typography variant=\"body2\">Progress: {progress}%</Typography>\n//                     <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 10, borderRadius: 5 }} />\n//                   </Box>\n//                   <Box sx={{ mt: 2 }}>\n//                     <Button variant=\"outlined\" onClick={() => setProgress((prev) => Math.min(prev + 10, 100))}>\n//                       Increase Progress\n//                     </Button>\n//                   </Box>\n//                 </CardContent>\n//               </Card>\n//             </Grid>\n//             {/* Study Plan */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Plan</Typography>\n//                   {loadingPlan ? (\n//                     <Typography variant=\"body2\">Generating plan...</Typography>\n//                   ) : studyPlan ? (\n//                     <Typography variant=\"body2\">{studyPlan}</Typography>\n//                   ) : (\n//                     <Typography variant=\"body2\">No plan generated yet.</Typography>\n//                   )}\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPlanModalOpen(true)}>\n//                     Create / Get Study Plan\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* Preferences */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Study Preferences</Typography>\n//                   <Typography variant=\"body2\">Customize your experience.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPreferencesModalOpen(true)}>\n//                     Update Preferences\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* Semester Targets */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Semester Targets</Typography>\n//                   <Typography variant=\"body2\">Set and monitor goals.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setTargetsModalOpen(true)}>\n//                     Set Targets\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* File Upload */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Upload File</Typography>\n//                   <Typography variant=\"body2\">Upload files to generate notes and exam questions.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setUploadModalOpen(true)}>\n//                     Upload File\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//             {/* AI Q&A */}\n//             <Grid item xs={12} md={6}>\n//               <Card>\n//                 <CardContent>\n//                   <Typography variant=\"h5\">Ask a Question</Typography>\n//                   <Typography variant=\"body2\">Get personalized AI answers.</Typography>\n//                 </CardContent>\n//                 <Box sx={{ p: 2 }}>\n//                   <Button variant=\"contained\" fullWidth onClick={() => setQaModalOpen(true)}>\n//                     Ask Question\n//                   </Button>\n//                 </Box>\n//               </Card>\n//             </Grid>\n//           </Grid>\n\n//           {/* Modals */}\n//           <Modal open={planModalOpen} onClose={() => setPlanModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Study Plan Options</Typography>\n//               <Button variant=\"contained\" fullWidth sx={{ mb: 2 }} onClick={handleGenerateStudyPlan}>\n//                 Get AI Recommended Study Plan\n//               </Button>\n//               <Button variant=\"outlined\" fullWidth onClick={() => alert(\"Navigate to custom study plan page.\")}>\n//                 Create My Own Study Plan\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={preferencesModalOpen} onClose={() => setPreferencesModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Update Preferences</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Preferred Study Time\"\n//                 value={preferences.preferredTime}\n//                 onChange={(e) => setPreferences({ ...preferences, preferredTime: e.target.value })}\n//                 sx={{ mb: 2 }}\n//               />\n//               <TextField\n//                 fullWidth\n//                 label=\"Favorite Subjects\"\n//                 value={preferences.subjects}\n//                 onChange={(e) => setPreferences({ ...preferences, subjects: e.target.value })}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleSavePreferences}>\n//                 Save Preferences\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={targetsModalOpen} onClose={() => setTargetsModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Semester Targets</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Enter your target\"\n//                 value={target}\n//                 onChange={(e) => setTarget(e.target.value)}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleSaveTarget}>\n//                 Save Target\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={uploadModalOpen} onClose={() => setUploadModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Upload File for AI Processing</Typography>\n//               <input type=\"file\" onChange={handleFileUpload} style={{ marginBottom: \"16px\" }} />\n//               <Button variant=\"contained\" fullWidth onClick={handleProcessFile}>\n//                 Process File\n//               </Button>\n//             </Box>\n//           </Modal>\n\n//           <Modal open={qaModalOpen} onClose={() => setQaModalOpen(false)}>\n//             <Box sx={modalStyle}>\n//               <Typography variant=\"h6\" gutterBottom>Ask a Question</Typography>\n//               <TextField\n//                 fullWidth\n//                 label=\"Your question\"\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button variant=\"contained\" fullWidth onClick={handleAskQuestion}>\n//                 Get Answer\n//               </Button>\n//             </Box>\n//           </Modal>\n//         </>\n//       ) : (\n//         <Typography variant=\"h6\">Please log in to view your dashboard.</Typography>\n//       )}\n//     </Container>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useContext, useState } from \"react\";\nimport { Container, Typography, Grid, Card, CardContent, Button, Box, LinearProgress, Modal, TextField, Fade } from \"@mui/material\";\nimport { AuthContext } from \"../AuthContext\";\nimport { generateStudyPlan } from \"../services/api\";\n\n// Modal style for MUI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #1976d2\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2\n};\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [progress, setProgress] = useState(60); // sample progress value\n  const [studyPlan, setStudyPlan] = useState(null);\n  const [preferences, setPreferences] = useState({\n    preferredTime: \"\",\n    subjects: \"\"\n  });\n  const [target, setTarget] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [aiResult, setAiResult] = useState(\"\");\n\n  // Modal state controls\n  const [planModalOpen, setPlanModalOpen] = useState(false);\n  const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\n  const [targetsModalOpen, setTargetsModalOpen] = useState(false);\n  const [uploadModalOpen, setUploadModalOpen] = useState(false);\n  const [qaModalOpen, setQaModalOpen] = useState(false);\n  const [loadingPlan, setLoadingPlan] = useState(false);\n\n  // Handler for generating study plan via AI\n  const handleGenerateStudyPlan = async () => {\n    setLoadingPlan(true);\n    try {\n      const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(preferences)} and current progress of ${progress}%. Provide a daily schedule, study tips, and recommended resources.`;\n      const aiPlan = await generateStudyPlan(prompt, \"study plan\");\n      setStudyPlan(aiPlan);\n      alert(\"AI study plan generated.\");\n      setPlanModalOpen(false);\n    } catch (error) {\n      console.error(\"Error generating study plan:\", error);\n      alert(\"Error generating study plan.\");\n    } finally {\n      setLoadingPlan(false);\n    }\n  };\n  const handleSavePreferences = () => {\n    // Save preferences to your backend or local storage\n    alert(\"Preferences saved!\");\n    setPreferencesModalOpen(false);\n  };\n  const handleSaveTarget = () => {\n    // Save target value to your backend or state\n    alert(`Semester target \"${target}\" saved!`);\n    setTargetsModalOpen(false);\n  };\n  const handleFileUpload = e => {\n    setUploadedFile(e.target.files[0]);\n  };\n  const handleProcessFile = async () => {\n    const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\n    const result = await generateStudyPlan(prompt, \"file processing\");\n    setAiResult(result);\n    alert(`AI generated notes: ${result}`);\n    setUploadModalOpen(false);\n  };\n  const handleAskQuestion = async () => {\n    const prompt = `Answer this question: ${question}`;\n    const answer = await generateStudyPlan(prompt, \"question answer\");\n    setAiResult(answer);\n    alert(`AI Answer: ${answer}`);\n    setQaModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: user ? /*#__PURE__*/_jsxDEV(Fade, {\n      in: true,\n      timeout: 1000,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"Welcome, \", user.usernamee, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Here\\u2019s your personalized dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Study Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Current Progress: \", progress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                    variant: \"determinate\",\n                    value: progress,\n                    sx: {\n                      height: 10,\n                      borderRadius: 5,\n                      backgroundColor: \"#e0e0e0\",\n                      \"& .MuiLinearProgress-bar\": {\n                        backgroundColor: \"#1976d2\"\n                      },\n                      mt: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => setProgress(prev => Math.min(prev + 10, 100)),\n                    children: \"Increase Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Study Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this), loadingPlan ? /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Generating plan...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 23\n                }, this) : studyPlan ? /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  gutterBottom: true,\n                  children: studyPlan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"No study plan generated yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => setPlanModalOpen(true),\n                  children: \"Get AI Study Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Study Preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Customize your learning experience.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => setPreferencesModalOpen(true),\n                  children: \"Update Preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Semester Targets\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Set and track your academic goals.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => setTargetsModalOpen(true),\n                  children: \"Set Targets\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Upload File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Upload files to generate notes and exam questions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => setUploadModalOpen(true),\n                  children: \"Upload File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                borderRadius: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Ask a Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Get personalized answers from our AI.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => setQaModalOpen(true),\n                  children: \"Ask Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: planModalOpen,\n          onClose: () => setPlanModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: modalStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Study Plan Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              onClick: handleGenerateStudyPlan,\n              children: \"Get AI Recommended Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              fullWidth: true,\n              onClick: () => alert(\"Navigate to custom plan creation page.\"),\n              children: \"Create My Own Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: preferencesModalOpen,\n          onClose: () => setPreferencesModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: modalStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Update Study Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Preferred Study Time\",\n              value: preferences.preferredTime,\n              onChange: e => setPreferences({\n                ...preferences,\n                preferredTime: e.target.value\n              }),\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Favorite Subjects\",\n              value: preferences.subjects,\n              onChange: e => setPreferences({\n                ...preferences,\n                subjects: e.target.value\n              }),\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: handleSavePreferences,\n              children: \"Save Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: targetsModalOpen,\n          onClose: () => setTargetsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: modalStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Semester Targets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Enter your target\",\n              value: target,\n              onChange: e => setTarget(e.target.value),\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: handleSaveTarget,\n              children: \"Save Target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: uploadModalOpen,\n          onClose: () => setUploadModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: modalStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Upload File for AI Processing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileUpload,\n              style: {\n                marginBottom: \"16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: handleProcessFile,\n              children: \"Process File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: qaModalOpen,\n          onClose: () => setQaModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: modalStyle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Ask a Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Your question\",\n              value: question,\n              onChange: e => setQuestion(e.target.value),\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: handleAskQuestion,\n              children: \"Get Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Please log in to view your dashboard.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"amAnAwp5lW8ThB4sR4OGG6sEGPY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","Container","Typography","Grid","Card","CardContent","Button","Box","LinearProgress","Modal","TextField","Fade","AuthContext","generateStudyPlan","jsxDEV","_jsxDEV","modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","borderRadius","Dashboard","_s","user","progress","setProgress","studyPlan","setStudyPlan","preferences","setPreferences","preferredTime","subjects","target","setTarget","uploadedFile","setUploadedFile","question","setQuestion","aiResult","setAiResult","planModalOpen","setPlanModalOpen","preferencesModalOpen","setPreferencesModalOpen","targetsModalOpen","setTargetsModalOpen","uploadModalOpen","setUploadModalOpen","qaModalOpen","setQaModalOpen","loadingPlan","setLoadingPlan","handleGenerateStudyPlan","prompt","JSON","stringify","aiPlan","alert","error","console","handleSavePreferences","handleSaveTarget","handleFileUpload","e","files","handleProcessFile","name","result","handleAskQuestion","answer","sx","mt","children","in","timeout","variant","gutterBottom","usernamee","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","value","height","backgroundColor","onClick","prev","Math","min","fullWidth","open","onClose","mb","label","onChange","type","style","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/AI-SMART STUDY ASSISTANT/frontend/src/components/Dashboard.js"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\r\n// import {\r\n//   Container,\r\n//   Typography,\r\n//   Grid,\r\n//   Card,\r\n//   CardContent,\r\n//   Button,\r\n//   Box,\r\n//   LinearProgress,\r\n//   Modal,\r\n//   TextField\r\n// } from \"@mui/material\";\r\n// import { AuthContext } from \"../AuthContext\";\r\n// import { generateStudyPlan } from \"../services/api\";\r\n\r\n// // Modal style\r\n// const modalStyle = {\r\n//   position: \"absolute\",\r\n//   top: \"50%\",\r\n//   left: \"50%\",\r\n//   transform: \"translate(-50%, -50%)\",\r\n//   width: 400,\r\n//   bgcolor: \"background.paper\",\r\n//   border: \"2px solid #000\",\r\n//   boxShadow: 24,\r\n//   p: 4,\r\n// };\r\n\r\n// const Dashboard = () => {\r\n//   const { user } = useContext(AuthContext);\r\n//   const [progress, setProgress] = useState(50);\r\n//   const [studyPlan, setStudyPlan] = useState(null);\r\n//   const [preferences, setPreferences] = useState({ preferredTime: \"\", subjects: \"\" });\r\n//   const [target, setTarget] = useState(\"\");\r\n//   const [uploadedFile, setUploadedFile] = useState(null);\r\n//   const [question, setQuestion] = useState(\"\");\r\n//   const [aiResult, setAiResult] = useState(\"\");\r\n\r\n//   const [planModalOpen, setPlanModalOpen] = useState(false);\r\n//   const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\r\n//   const [targetsModalOpen, setTargetsModalOpen] = useState(false);\r\n//   const [uploadModalOpen, setUploadModalOpen] = useState(false);\r\n//   const [qaModalOpen, setQaModalOpen] = useState(false);\r\n//   const [loadingPlan, setLoadingPlan] = useState(false);\r\n\r\n//   const handleGenerateStudyPlan = async () => {\r\n//     setLoadingPlan(true);\r\n//     try {\r\n//       const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(preferences)} and current progress of ${progress}%. Provide a daily schedule and study tips.`;\r\n//       const aiPlan = await generateStudyPlan(prompt, \"study plan\");\r\n//       setStudyPlan(aiPlan);\r\n//       alert(\"AI study plan generated.\");\r\n//       setPlanModalOpen(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error generating study plan:\", error);\r\n//       alert(\"Error generating study plan.\");\r\n//     } finally {\r\n//       setLoadingPlan(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSavePreferences = () => {\r\n//     alert(\"Preferences saved!\");\r\n//     setPreferencesModalOpen(false);\r\n//   };\r\n\r\n//   const handleSaveTarget = () => {\r\n//     alert(`Semester target \"${target}\" saved!`);\r\n//     setTargetsModalOpen(false);\r\n//   };\r\n\r\n//   const handleFileUpload = (e) => {\r\n//     setUploadedFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleProcessFile = async () => {\r\n//     const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\r\n//     const result = await generateStudyPlan(prompt, \"file processing\");\r\n//     setAiResult(result);\r\n//     alert(`AI generated notes: ${result}`);\r\n//     setUploadModalOpen(false);\r\n//   };\r\n\r\n//   const handleAskQuestion = async () => {\r\n//     const prompt = `Answer this question: ${question}`;\r\n//     const answer = await generateStudyPlan(prompt, \"question answer\");\r\n//     setAiResult(answer);\r\n//     alert(`AI Answer: ${answer}`);\r\n//     setQaModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Container sx={{ mt: 4 }}>\r\n//       {user ? (\r\n//         <>\r\n//           <Typography variant=\"h4\" gutterBottom>Dashboard</Typography>\r\n//           <Typography variant=\"h6\" gutterBottom>Welcome, {user.username}!</Typography>\r\n//           <Grid container spacing={3}>\r\n//             {/* Study Progress */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Progress</Typography>\r\n//                   <Box sx={{ mt: 2 }}>\r\n//                     <Typography variant=\"body2\">Progress: {progress}%</Typography>\r\n//                     <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 10, borderRadius: 5 }} />\r\n//                   </Box>\r\n//                   <Box sx={{ mt: 2 }}>\r\n//                     <Button variant=\"outlined\" onClick={() => setProgress((prev) => Math.min(prev + 10, 100))}>\r\n//                       Increase Progress\r\n//                     </Button>\r\n//                   </Box>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Study Plan */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Plan</Typography>\r\n//                   {loadingPlan ? (\r\n//                     <Typography variant=\"body2\">Generating plan...</Typography>\r\n//                   ) : studyPlan ? (\r\n//                     <Typography variant=\"body2\">{studyPlan}</Typography>\r\n//                   ) : (\r\n//                     <Typography variant=\"body2\">No plan generated yet.</Typography>\r\n//                   )}\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPlanModalOpen(true)}>\r\n//                     Create / Get Study Plan\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Preferences */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Study Preferences</Typography>\r\n//                   <Typography variant=\"body2\">Customize your experience.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setPreferencesModalOpen(true)}>\r\n//                     Update Preferences\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* Semester Targets */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Semester Targets</Typography>\r\n//                   <Typography variant=\"body2\">Set and monitor goals.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setTargetsModalOpen(true)}>\r\n//                     Set Targets\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* File Upload */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Upload File</Typography>\r\n//                   <Typography variant=\"body2\">Upload files to generate notes and exam questions.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setUploadModalOpen(true)}>\r\n//                     Upload File\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//             {/* AI Q&A */}\r\n//             <Grid item xs={12} md={6}>\r\n//               <Card>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h5\">Ask a Question</Typography>\r\n//                   <Typography variant=\"body2\">Get personalized AI answers.</Typography>\r\n//                 </CardContent>\r\n//                 <Box sx={{ p: 2 }}>\r\n//                   <Button variant=\"contained\" fullWidth onClick={() => setQaModalOpen(true)}>\r\n//                     Ask Question\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Card>\r\n//             </Grid>\r\n//           </Grid>\r\n\r\n//           {/* Modals */}\r\n//           <Modal open={planModalOpen} onClose={() => setPlanModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Study Plan Options</Typography>\r\n//               <Button variant=\"contained\" fullWidth sx={{ mb: 2 }} onClick={handleGenerateStudyPlan}>\r\n//                 Get AI Recommended Study Plan\r\n//               </Button>\r\n//               <Button variant=\"outlined\" fullWidth onClick={() => alert(\"Navigate to custom study plan page.\")}>\r\n//                 Create My Own Study Plan\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={preferencesModalOpen} onClose={() => setPreferencesModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Update Preferences</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Preferred Study Time\"\r\n//                 value={preferences.preferredTime}\r\n//                 onChange={(e) => setPreferences({ ...preferences, preferredTime: e.target.value })}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Favorite Subjects\"\r\n//                 value={preferences.subjects}\r\n//                 onChange={(e) => setPreferences({ ...preferences, subjects: e.target.value })}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleSavePreferences}>\r\n//                 Save Preferences\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={targetsModalOpen} onClose={() => setTargetsModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Semester Targets</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Enter your target\"\r\n//                 value={target}\r\n//                 onChange={(e) => setTarget(e.target.value)}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleSaveTarget}>\r\n//                 Save Target\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={uploadModalOpen} onClose={() => setUploadModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Upload File for AI Processing</Typography>\r\n//               <input type=\"file\" onChange={handleFileUpload} style={{ marginBottom: \"16px\" }} />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleProcessFile}>\r\n//                 Process File\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n\r\n//           <Modal open={qaModalOpen} onClose={() => setQaModalOpen(false)}>\r\n//             <Box sx={modalStyle}>\r\n//               <Typography variant=\"h6\" gutterBottom>Ask a Question</Typography>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 label=\"Your question\"\r\n//                 value={question}\r\n//                 onChange={(e) => setQuestion(e.target.value)}\r\n//                 sx={{ mb: 2 }}\r\n//               />\r\n//               <Button variant=\"contained\" fullWidth onClick={handleAskQuestion}>\r\n//                 Get Answer\r\n//               </Button>\r\n//             </Box>\r\n//           </Modal>\r\n//         </>\r\n//       ) : (\r\n//         <Typography variant=\"h6\">Please log in to view your dashboard.</Typography>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Box,\r\n  LinearProgress,\r\n  Modal,\r\n  TextField,\r\n  Fade\r\n} from \"@mui/material\";\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport { generateStudyPlan } from \"../services/api\";\r\n\r\n// Modal style for MUI\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #1976d2\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 2,\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [progress, setProgress] = useState(60); // sample progress value\r\n  const [studyPlan, setStudyPlan] = useState(null);\r\n  const [preferences, setPreferences] = useState({ preferredTime: \"\", subjects: \"\" });\r\n  const [target, setTarget] = useState(\"\");\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [aiResult, setAiResult] = useState(\"\");\r\n\r\n  // Modal state controls\r\n  const [planModalOpen, setPlanModalOpen] = useState(false);\r\n  const [preferencesModalOpen, setPreferencesModalOpen] = useState(false);\r\n  const [targetsModalOpen, setTargetsModalOpen] = useState(false);\r\n  const [uploadModalOpen, setUploadModalOpen] = useState(false);\r\n  const [qaModalOpen, setQaModalOpen] = useState(false);\r\n  const [loadingPlan, setLoadingPlan] = useState(false);\r\n\r\n  // Handler for generating study plan via AI\r\n  const handleGenerateStudyPlan = async () => {\r\n    setLoadingPlan(true);\r\n    try {\r\n      const prompt = `Generate a personalized study plan for a student with preferences: ${JSON.stringify(\r\n        preferences\r\n      )} and current progress of ${progress}%. Provide a daily schedule, study tips, and recommended resources.`;\r\n      const aiPlan = await generateStudyPlan(prompt, \"study plan\");\r\n      setStudyPlan(aiPlan);\r\n      alert(\"AI study plan generated.\");\r\n      setPlanModalOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error generating study plan:\", error);\r\n      alert(\"Error generating study plan.\");\r\n    } finally {\r\n      setLoadingPlan(false);\r\n    }\r\n  };\r\n\r\n  const handleSavePreferences = () => {\r\n    // Save preferences to your backend or local storage\r\n    alert(\"Preferences saved!\");\r\n    setPreferencesModalOpen(false);\r\n  };\r\n\r\n  const handleSaveTarget = () => {\r\n    // Save target value to your backend or state\r\n    alert(`Semester target \"${target}\" saved!`);\r\n    setTargetsModalOpen(false);\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    setUploadedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleProcessFile = async () => {\r\n    const prompt = `Based on the uploaded file named ${uploadedFile ? uploadedFile.name : \"unknown\"}, generate short notes and exam questions.`;\r\n    const result = await generateStudyPlan(prompt, \"file processing\");\r\n    setAiResult(result);\r\n    alert(`AI generated notes: ${result}`);\r\n    setUploadModalOpen(false);\r\n  };\r\n\r\n  const handleAskQuestion = async () => {\r\n    const prompt = `Answer this question: ${question}`;\r\n    const answer = await generateStudyPlan(prompt, \"question answer\");\r\n    setAiResult(answer);\r\n    alert(`AI Answer: ${answer}`);\r\n    setQaModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: 4 }}>\r\n      {user ? (\r\n        <Fade in timeout={1000}>\r\n          <Box>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Welcome, {user.usernamee}!\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Here’s your personalized dashboard.\r\n            </Typography>\r\n            <Grid container spacing={3} sx={{ mt: 2 }}>\r\n              {/* Study Progress Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Study Progress</Typography>\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <Typography variant=\"body2\">\r\n                        Current Progress: {progress}%\r\n                      </Typography>\r\n                      <LinearProgress\r\n                        variant=\"determinate\"\r\n                        value={progress}\r\n                        sx={{\r\n                          height: 10,\r\n                          borderRadius: 5,\r\n                          backgroundColor: \"#e0e0e0\",\r\n                          \"& .MuiLinearProgress-bar\": { backgroundColor: \"#1976d2\" },\r\n                          mt: 1,\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() =>\r\n                          setProgress((prev) => Math.min(prev + 10, 100))\r\n                        }\r\n                      >\r\n                        Increase Progress\r\n                      </Button>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              {/* Study Plan Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Study Plan</Typography>\r\n                    {loadingPlan ? (\r\n                      <Typography variant=\"body2\">Generating plan...</Typography>\r\n                    ) : studyPlan ? (\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        {studyPlan}\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">\r\n                        No study plan generated yet.\r\n                      </Typography>\r\n                    )}\r\n                  </CardContent>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => setPlanModalOpen(true)}\r\n                    >\r\n                      Get AI Study Plan\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n              {/* Study Preferences Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Study Preferences</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Customize your learning experience.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => setPreferencesModalOpen(true)}\r\n                    >\r\n                      Update Preferences\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n              {/* Semester Targets Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Semester Targets</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Set and track your academic goals.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => setTargetsModalOpen(true)}\r\n                    >\r\n                      Set Targets\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n              {/* File Upload Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Upload File</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Upload files to generate notes and exam questions.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => setUploadModalOpen(true)}\r\n                    >\r\n                      Upload File\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n              {/* AI Q&A Card */}\r\n              <Grid item xs={12} md={6}>\r\n                <Card sx={{ borderRadius: 2 }}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\">Ask a Question</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Get personalized answers from our AI.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => setQaModalOpen(true)}\r\n                    >\r\n                      Ask Question\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Modals */}\r\n            {/* Study Plan Modal */}\r\n            <Modal open={planModalOpen} onClose={() => setPlanModalOpen(false)}>\r\n              <Box sx={modalStyle}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Study Plan Options\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  sx={{ mb: 2 }}\r\n                  onClick={handleGenerateStudyPlan}\r\n                >\r\n                  Get AI Recommended Plan\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onClick={() => alert(\"Navigate to custom plan creation page.\")}\r\n                >\r\n                  Create My Own Plan\r\n                </Button>\r\n              </Box>\r\n            </Modal>\r\n            {/* Preferences Modal */}\r\n            <Modal open={preferencesModalOpen} onClose={() => setPreferencesModalOpen(false)}>\r\n              <Box sx={modalStyle}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Update Study Preferences\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Preferred Study Time\"\r\n                  value={preferences.preferredTime}\r\n                  onChange={(e) =>\r\n                    setPreferences({ ...preferences, preferredTime: e.target.value })\r\n                  }\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Favorite Subjects\"\r\n                  value={preferences.subjects}\r\n                  onChange={(e) =>\r\n                    setPreferences({ ...preferences, subjects: e.target.value })\r\n                  }\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button variant=\"contained\" fullWidth onClick={handleSavePreferences}>\r\n                  Save Preferences\r\n                </Button>\r\n              </Box>\r\n            </Modal>\r\n            {/* Semester Targets Modal */}\r\n            <Modal open={targetsModalOpen} onClose={() => setTargetsModalOpen(false)}>\r\n              <Box sx={modalStyle}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Semester Targets\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Enter your target\"\r\n                  value={target}\r\n                  onChange={(e) => setTarget(e.target.value)}\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button variant=\"contained\" fullWidth onClick={handleSaveTarget}>\r\n                  Save Target\r\n                </Button>\r\n              </Box>\r\n            </Modal>\r\n            {/* File Upload Modal */}\r\n            <Modal open={uploadModalOpen} onClose={() => setUploadModalOpen(false)}>\r\n              <Box sx={modalStyle}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Upload File for AI Processing\r\n                </Typography>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={handleFileUpload}\r\n                  style={{ marginBottom: \"16px\" }}\r\n                />\r\n                <Button variant=\"contained\" fullWidth onClick={handleProcessFile}>\r\n                  Process File\r\n                </Button>\r\n              </Box>\r\n            </Modal>\r\n            {/* AI Q&A Modal */}\r\n            <Modal open={qaModalOpen} onClose={() => setQaModalOpen(false)}>\r\n              <Box sx={modalStyle}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Ask a Question\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Your question\"\r\n                  value={question}\r\n                  onChange={(e) => setQuestion(e.target.value)}\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button variant=\"contained\" fullWidth onClick={handleAskQuestion}>\r\n                  Get Answer\r\n                </Button>\r\n              </Box>\r\n            </Modal>\r\n          </Box>\r\n        </Fade>\r\n      ) : (\r\n        <Typography variant=\"h6\">Please log in to view your dashboard.</Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}